const form=document.querySelector(".add"),incomeList=document.querySelector("ul.income-list"),expenseList=document.querySelector("ul.expense-list"),balance=document.getElementById("balance"),income=document.getElementById("income"),expense=document.getElementById("expense");let transactions=null!==localStorage.getItem("transactions")?JSON.parse(localStorage.getItem("transactions")):[];function updateStatistics(){const t=transactions.filter((t=>t.amount>0)).reduce(((t,e)=>t+parseInt(e.amount)),0),e=transactions.filter((t=>t.amount<0)).reduce(((t,e)=>t+Math.abs(parseInt(e.amount))),0);console.log(t,e),updatedBalance=t-e,balance.textContent=updatedBalance,income.textContent=t,expense.textContent=e}function generateTemplate(t,e,n,a){return` <li data-id="${t}">\n                <p>\n                  <span>${e}</span>\n                  <span id="time">${a}</span>\n                </p>\n                  <span>$${Math.abs(n)}</span>\n                  <i class="bi bi-trash delete"></i>\n            </li>`}function addTransactionsDom(t,e,n,a){n>0?incomeList.innerHTML+=generateTemplate(t,e,n,a):expenseList.innerHTML+=generateTemplate(t,e,n,a)}function addTransactions(t,e){const n=new Date,a={id:Math.round(1e6*Math.random()),source:t,amount:e,time:`${n.toLocaleTimeString()} ${n.toLocaleDateString()}`};console.log(transactions),transactions=[...transactions,a],localStorage.setItem("transactions",JSON.stringify(transactions)),addTransactionsDom(a.id,t,e,a.time)}function getTransactions(){transactions.forEach((t=>{t.amount>0?incomeList.innerHTML+=generateTemplate(t.id,t.source,t.amount,t.time):expenseList.innerHTML+=generateTemplate(t.id,t.source,t.amount,t.time)}))}function deleteTransaction(t){transactions=transactions.filter((e=>e.id!==parseInt(t))),localStorage.setItem("transactions",JSON.stringify(transactions))}function init(){updateStatistics(),getTransactions()}form.addEventListener("submit",(t=>{if(t.preventDefault(),""===form.source.value.trim()||""===form.amount.value)return alert("please add proper values!");addTransactions(form.source.value.trim(),form.amount.value),updateStatistics(),form.reset()})),incomeList.addEventListener("click",(t=>{t.target.classList.contains("delete")&&(t.target.parentElement.remove(),deleteTransaction(t.target.parentElement.dataset.id),updateStatistics())})),expenseList.addEventListener("click",(t=>{t.target.classList.contains("delete")&&(t.target.parentElement.remove(),deleteTransaction(t.target.parentElement.dataset.id),updateStatistics())})),init();